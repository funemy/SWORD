package edu.tamu.aser.tide.plugin;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.IResourceChangeEvent;
import org.eclipse.core.resources.IResourceChangeListener;
import org.eclipse.core.resources.IResourceDelta;
import org.eclipse.core.resources.IResourceDeltaVisitor;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jdt.core.ElementChangedEvent;
import org.eclipse.jdt.core.ICompilationUnit;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.JavaCore;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.osgi.framework.BundleContext;

import edu.tamu.aser.tide.plugin.handlers.ConvertHandler;

/**
 * The activator class controls the plug-in life cycle
 */
public class Activator extends AbstractUIPlugin {

	// The plug-in ID
	public static final String PLUGIN_ID = "edu.tamu.aser.tide.plugin"; //$NON-NLS-1$

	// The shared instance
	private static Activator plugin;

//	public static IJavaProject project;
	private ConvertHandler handler;
	/**
	 * The constructor
	 */
	public Activator() {

        //System.out.println("IN THE CONSTRUCTOR OF ACTIVATOR");
	}

	/*
	 * (non-Javadoc)
	 * @see org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext)
	 */
	public void start(BundleContext context) throws Exception {
		super.start(context);
		plugin = this;

		JavaCore.addElementChangedListener(new MyJavaElementChangeReporter(), ElementChangedEvent.POST_CHANGE);//POST_CHANGE ElementChangedEvent.POST_RECONCILE

		//if(true)return;

		//add listener
/*
		ResourcesPlugin.getWorkspace().addResourceChangeListener(
			      new IResourceChangeListener()
			      {

					@Override
					public void resourceChanged(IResourceChangeEvent event) {
						// TODO Auto-generated method stub
						IResourceDelta delta = event.getDelta();
						try {
							delta.accept(new IResourceDeltaVisitor(){
								                      public boolean visit(IResourceDelta dd) throws CoreException {
								  						IResource res = dd.getResource();
								  						//IProject iproject = res.getProject() ;
								  						//if(iproject instanceof IJavaProject)
								  						{
								  							//if(iproject==project)
								  							{
										  						if(res.getFileExtension()!=null
										  								&&res.getFileExtension().equals("java")){
								  									//find changed method
								  									//incrementally update call-graph if a method call is added/removed
								  								//add new method

								  								//System.out.println(res);
									                            }
									  							if(res instanceof ICompilationUnit)
									  							{
									  								//System.out.println(res);

									  							}
								  							}

								  						}
									                            return true;
								                      }


									});
						} catch (CoreException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}

					}

			      }, IResourceChangeEvent.POST_BUILD);
*/

		//http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.platform.doc.isv%2Fguide%2FresAdv_events.htm
	}

	/*
	 * (non-Javadoc)
	 * @see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext context) throws Exception {
		plugin = null;
		super.stop(context);
	}

	/**
	 * Returns the shared instance
	 *
	 * @return the shared instance
	 */
	public static Activator getDefault() {
		return plugin;
	}

	public ConvertHandler getHandler()
	{
		return this.handler;
	}
	public void setHandler(ConvertHandler convertHandler) {

		this.handler = convertHandler;
	}


}
